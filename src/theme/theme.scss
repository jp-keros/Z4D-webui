/*
 * Global application theme.
 * Framework overrides and customization goes here.
 */
@use "sass:map";

$custom-control-indicator-bg: #dee2e6;
$custom-control-indicator-disabled-bg: #e9ecef;
$custom-control-description-disabled-color: #868e96;

//
// These variables can be used to customize the switch component.
//
$switch-height: calc(#{$input-height} * 0.8) !default;
$switch-height-sm: calc(#{$input-height-sm} * 0.8) !default;
$switch-height-lg: calc(#{$input-height-lg} * 0.8) !default;
$switch-border-radius: $switch-height !default;
$switch-bg: $custom-control-indicator-bg !default;
$switch-checked-bg: map.get($theme-colors, "primary") !default;
$switch-disabled-bg: $custom-control-indicator-disabled-bg !default;
$switch-disabled-color: $custom-control-description-disabled-color !default;
$switch-thumb-bg: $white !default;
$switch-thumb-border-radius: 50% !default;
$switch-thumb-padding: 2px !default;
$switch-focus-box-shadow: 0 0 0 $input-btn-focus-width rgba(map.get($theme-colors, "primary"), 0.25);
$switch-transition: 0.2s all !default;

.switch {
  font-size: $font-size-base;
  position: relative;

  input {
    position: absolute;
    height: 1px;
    width: 1px;
    background: none;
    border: 0;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    overflow: hidden;
    padding: 0;

    + label {
      position: relative;
      min-width: calc(#{$switch-height} * 2);
      border-radius: $switch-border-radius;
      height: $switch-height;
      line-height: $switch-height;
      display: inline-block;
      cursor: pointer;
      outline: none;
      user-select: none;
      vertical-align: middle;
      text-indent: calc(calc(#{$switch-height} * 2) + 0.5rem);
    }

    + label::before,
    + label::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: calc(#{$switch-height} * 2);
      bottom: 0;
      display: block;
    }

    + label::before {
      right: 0;
      background-color: $switch-bg;
      border-radius: $switch-border-radius;
      transition: $switch-transition;
    }

    + label::after {
      top: $switch-thumb-padding;
      left: $switch-thumb-padding;
      width: calc(#{$switch-height} - calc(#{$switch-thumb-padding} * 2));
      height: calc(#{$switch-height} - calc(#{$switch-thumb-padding} * 2));
      border-radius: $switch-thumb-border-radius;
      background-color: $switch-thumb-bg;
      transition: $switch-transition;
    }

    &:checked + label::before {
      background-color: $switch-checked-bg;
    }

    &:checked + label::after {
      margin-left: $switch-height;
    }

    &:focus + label::before {
      outline: none;
      box-shadow: $switch-focus-box-shadow;
    }

    &:disabled + label {
      color: $switch-disabled-color;
      cursor: not-allowed;
    }

    &:disabled + label::before {
      background-color: $switch-disabled-bg;
    }
  }

  // Small variation
  &.switch-sm {
    font-size: $font-size-sm;

    input {
      + label {
        min-width: calc(#{$switch-height-sm} * 2);
        height: $switch-height-sm;
        line-height: $switch-height-sm;
        text-indent: calc(calc(#{$switch-height-sm} * 2) + 0.5rem);
      }

      + label::before {
        width: calc(#{$switch-height-sm} * 2);
      }

      + label::after {
        width: calc(#{$switch-height-sm} - calc(#{$switch-thumb-padding} * 2));
        height: calc(#{$switch-height-sm} - calc(#{$switch-thumb-padding} * 2));
      }

      &:checked + label::after {
        margin-left: $switch-height-sm;
      }
    }
  }

  // Large variation
  &.switch-lg {
    font-size: $font-size-lg;

    input {
      + label {
        min-width: calc(#{$switch-height-lg} * 2);
        height: $switch-height-lg;
        line-height: $switch-height-lg;
        text-indent: calc(calc(#{$switch-height-lg} * 2) + 0.5rem);
      }

      + label::before {
        width: calc(#{$switch-height-lg} * 2);
      }

      /* stylelint-disable-next-line no-descending-specificity */
      + label::after {
        width: calc(#{$switch-height-lg} - calc(#{$switch-thumb-padding} * 2));
        height: calc(#{$switch-height-lg} - calc(#{$switch-thumb-padding} * 2));
      }

      &:checked + label::after {
        margin-left: $switch-height-lg;
      }
    }
  }

  + .switch {
    margin-left: 1rem;
  }
}

.blink {
  color: red;
  animation: blink 2s steps(5, start) infinite;
  /* stylelint-disable-next-line property-no-vendor-prefix */
  -webkit-animation: blink 1s steps(5, start) infinite;
}

@keyframes blink {
  to {
    visibility: hidden;
  }
}

/* stylelint-disable-next-line at-rule-no-vendor-prefix */
@-webkit-keyframes blink {
  to {
    visibility: hidden;
  }
}

button[disabled] {
  cursor: not-allowed;
}

ng-select {
  .ng-dropdown-panel {
    width: auto;
  }
}

a {
  text-decoration: none;
}

.card-footer {
  padding: 2;
  color: transparent;
  background-color: transparent;
  border-top: 0;
}

.p-datatable .p-sortable-column .p-sortable-column-icon {
  margin-left: 0.2rem;
}

.p-inputtext {
  padding: 0.375rem 0.75rem;
}

.p-input-icon-left > .p-inputtext {
  padding-left: 2.5rem;
}

/*
 * Entry point of global application style.
 * Component-specific style should not go here and be included directly as part of the components.
 */
.advanced-pie-legend .total-value {
  /* stylelint-disable-next-line declaration-no-important */
  font-size: 20px !important;
}

.advanced-pie-legend .total-label {
  /* stylelint-disable-next-line declaration-no-important */
  font-size: 14px !important;
  /* stylelint-disable-next-line declaration-no-important */
  margin-bottom: 5px !important;
  /* stylelint-disable-next-line declaration-no-important */
  line-height: 1em !important;
}

.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value {
  /* stylelint-disable-next-line declaration-no-important */
  font-size: 14px !important;
  margin-left: 11px;
  /* stylelint-disable-next-line declaration-no-important */
  line-height: 1em !important;
  /* stylelint-disable-next-line declaration-no-important */
  margin-top: 0 !important;
}

.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label {
  /* stylelint-disable-next-line declaration-no-important */
  font-size: 10px !important;
  opacity: 0.7;
  margin-left: 11px;
  /* stylelint-disable-next-line declaration-no-important */
  margin-top: 0 !important;
  /* stylelint-disable-next-line declaration-no-important */
  line-height: 1em !important;
}

.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent {
  /* stylelint-disable-next-line declaration-no-important */
  font-size: 14px !important;
  opacity: 0.7;
  margin-left: 11px;
  /* stylelint-disable-next-line declaration-no-important */
  line-height: 1em !important;
}
